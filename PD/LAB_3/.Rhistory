meanVector <- function(arr){
media <- mean(arr)
media_4cifre <- round(media, 4)
return(media_4cifre)
}
arr <- c(13, 4.343, 434, 32, 34.54, 32)
res <- meanVector(arr)
print(res)
factLoop <- function(fact){
res = 1
for (i in 1:fact) {
res = res * i
}
return(res)
}
factProd <- function(fact){
res <- prod(1:fact)
return(res)
}
print(factLoop(5))
print(factProd(5))
library(ggplot2)
# Definim un set de valori pentru x în intervalul [-2, 2]
x <- seq(-2, 2, by = 0.01)
# Calculam valorile corespunzătoare pentru funcția f(x)
y <- x^5 + x^3 - 3 * x
# Cream un cadru de date cu valorile x și y
data <- data.frame(x = x, y = y)
# Cream un grafic folosind ggplot2
grafic <- ggplot(data, aes(x, y)) +
geom_line(color = "blue", size = 2) +
labs(title = "Graficul functiei f(x) = x^5 + x^3 - 3x",
x = "x",
y = "f(x)")
# Afișam graficul
print(grafic)
vectorStats <- function(arr, option){
if(option == "mean"){
return(mean(arr))
} else if(option == "median"){
return(median(arr))
} else if(option == "sd"){
return(sd(arr))
}
return("No valid option")
}
arr <- c(4,3,5.4,34,34,43,43,32)
option = "mean"
res <- vectorStats(arr, option)
print(paste(option, " -> ", res))
option = "median"
res <- vectorStats(arr, option)
print(paste(option, " -> ", res))
option = "sd"
res <- vectorStats(arr, option)
print(paste(option, " -> ", res))
makeAbs <- function(arr){
arrAbs <- abs(arr)
return(arrAbs)
}
print(makeAbs(c(3,4,-34,4)))
library(ggplot2)
# Cream un set de date care conține valorile pentru x și valorile pentru funcția sinus
x <- seq(0.5, 3 * pi, length.out = 100)  # Generăm 100 de puncte în intervalul [0.5, 3π]
y <- sin(x)
# Creăm un obiect ggplot folosind datele noastre
grafic <- ggplot(data = data.frame(x = x, y = y), aes(x, y))
# Adăugăm o curbă pentru funcția sinus cu culoare roșie și grosimea liniei 15
grafic <- grafic + geom_line(color = "red", size = 1.5)
# Adăugăm titlul graficului
grafic <- grafic + labs(title = "Graficul funcției sinus")
# Afișăm graficul
print(grafic)
library(ggplot2)
# Cream un set de date care conține valorile pentru x și valorile pentru funcția sinus
x <- seq(0.5, 3 * pi, length.out = 100)  # Generăm 100 de puncte în intervalul [0.5, 3π]
y <- sin(x)
# Creăm un obiect ggplot folosind datele noastre
grafic <- ggplot(data = data.frame(x = x, y = y), aes(x, y))
# Adăugăm o curbă pentru funcția sinus cu culoare roșie și grosimea liniei 15
grafic <- grafic + geom_line(color = "red", size = 1.5)
# Adăugăm titlul graficului
grafic <- grafic + labs(title = "Graficul funcției sinus")
# Afișăm graficul
print(grafic)
# Instalați și încărcați biblioteca "datasets", dacă nu este deja instalată
# install.packages("datasets")
library(datasets)
# Încărcați setul de date "Orange"
data(Orange)
# Desenați graficul de dispersie
plot(Orange$circumference, Orange$age,
pch = 16,            # Tipul de marcator
col.main = "blue",   # Culoarea titlului principal
sub = "Scatter Plot of Age vs. Circumference", # Subtitlu
ylab = "Age",        # Eticheta axei y
xlab = "Circumference" # Eticheta axei x
)
# Adăugați o linie de regresie liniară
abline(lm(age ~ circumference, data = Orange), col = "red")
plot(Orange$age, Orange$circumference, pch = 6, col = "green", xlab = "", ylab = "")
# Instalați și încărcați biblioteca "datasets", dacă nu este deja instalată
# install.packages("datasets")
library(datasets)
# Încărcați setul de date "Orange"
data(Orange)
# Desenați graficul de dispersie
plot(Orange$age, Orange$circumference, pch = 6, col = "green", xlab = "", ylab = "")
# Instalați și încărcați biblioteca "datasets", dacă nu este deja instalată
# install.packages("datasets")
library(datasets)
# Încărcați setul de date "Orange"
data(Orange)
# Desenați graficul de dispersie
plot(Orange$age, Orange$circumference, pch = 6, col = "green", xlab = "", ylab = "")
# Valorile x între -6 și 6
x <- seq(-6, 6, by = 0.01)
# Calculați densitatea normală pentru fiecare valoare x
densitate_normala <- dnorm(x)
# Desenați graficul distribuției normale
plot(x, densitate_normala, type = "l", lwd = 2, col = "blue",
xlab = "Valoarea x", ylab = "Densitatea", main = "Distribuție normală între -6 și 6")
# Adăugați o linie verticală la valoarea 0
abline(v = 0, col = "red", lty = 2)
# Adăugați o legendă în dreapta sus
legend("topright", legend = "Distribuție normală între -6 și 6", col = "blue", lwd = 2)
library(ggplot2)
# Definim un set de valori pentru x în intervalul [-2, 2]
x <- seq(-2, 2, by = 0.01)
# Calculam valorile corespunzătoare pentru funcția f(x)
y <- x^5 + x^3 - 3 * x
# Cream un cadru de date cu valorile x și y
data <- data.frame(x = x, y = y)
# Cream un grafic folosind ggplot2
grafic <- ggplot(data, aes(x, y)) +
geom_line(color = "blue", size = 2) +
labs(title = "Graficul functiei f(x) = x^5 + x^3 - 3x",
x = "x",
y = "f(x)")
# Afișam graficul
print(grafic)
library(ggplot2)
# Definim un set de valori pentru x în intervalul [-2, 2]
x <- seq(-2, 2, by = 0.01)
# Calculam valorile corespunzătoare pentru funcția f(x)
y <- x^5 + x^3 - 3 * x
# Cream un cadru de date cu valorile x și y
data <- data.frame(x = x, y = y)
# Cream un grafic folosind ggplot2
grafic <- ggplot(data, aes(x, y)) +
geom_line(color = "black", size = 2) +
labs(title = "Graficul functiei f(x) = x^5 + x^3 - 3x",
x = "x",
y = "f(x)")
# Afișam graficul
print(grafic)
